pipeline {
    agent any
    environment {
        NODE_VERSION = '22'
    }
    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    try {
                        echo 'Construyendo imagen Docker...'
                        // Usando el Dockerfile del proyecto
                        sh "docker build -t ${DOCKER_IMAGE} --build-arg NODE_VERSION=${NODE_VERSION} ."
                    } catch (Exception e) {
                        error('❌ Error en la etapa de Build Docker Image: ' + e.message)
                    }
                }
            }
        }        
        // stage('Build') {
        //     steps {
        //         script {
        //             try {
        //                 echo 'Instalando dependencias...'
        //                 sh 'npm install'
        //             } catch (Exception e) {
        //                 error('❌ Error en la etapa de Build ' + e.message)
        //             }
        //         }
        //     }
        // }
        // stage('Test') {
        //     steps {
        //         script {
        //             try {
        //                 echo 'Ejecutando pruebas...'
        //                 sh 'npm run test'
        //             } catch (Exception e) {
        //                 error('❌ Error en la etapa de Test ' + e.message)
        //             }
        //         }
        //     }
        // }
        stage('Test') {
            steps {
                script {
                    try {
                        echo 'Ejecutando pruebas en contenedor Docker...'
                        // Ejecutar las pruebas dentro del contenedor
                        sh "docker run --rm ${DOCKER_IMAGE} npm test"
                    } catch (Exception e) {
                        error('❌ Error en la etapa de Test: ' + e.message)
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    // try {
                    //     echo 'Desplegando aplicación...'
                    //     sh 'npm run start'
                    // } catch (Exception e) {
                    //     error('❌ Error en la etapa de Deploy ' + e.message)
                    // }
                    try {
                        echo 'Desplegando aplicación en contenedor Docker...'
                        // Detener y eliminar el contenedor anterior si existe
                        sh "docker stop ${APP_NAME} || true"
                        sh "docker rm ${APP_NAME} || true"
                        
                        // Ejecutar el nuevo contenedor en modo detached (-d)
                        sh "docker run -d -p 3000:3000 --name ${APP_NAME} ${DOCKER_IMAGE}"
                        
                        echo "Aplicación desplegada en http://localhost:3000"
                    } catch (Exception e) {
                        error('❌ Error en la etapa de Deploy: ' + e.message)
                    }
                }
            }
        }
    }
    post {
        success {
            echo '✅ Pipeline completado con éxito'
        }
        failure {
            echo '❌ El pipeline ha fallado'
        }
    }
}
